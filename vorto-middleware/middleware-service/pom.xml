<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.eclipse.vorto.middleware</groupId>
		<artifactId>parent</artifactId>
		<version>1.0.0</version>
	</parent>
	<artifactId>middleware-service</artifactId>
	<description>Micro-service that receives device data from Eclipse Hono and converts it according to Vorto Payload Mapping Models</description>

	<properties>
		<amq.version>5.15.8</amq.version>
		<angular.project.location>frontend</angular.project.location>
		<angular.project.nodeinstallation>node_installation</angular.project.nodeinstallation>
	</properties>
	
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-websocket</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-messaging</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.security</groupId>
					<artifactId>spring-security-web</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>4.2.9.RELEASE</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.security.oauth</groupId>
			<artifactId>spring-security-oauth2</artifactId>
			<version>2.0.17.RELEASE</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.eclipse.vorto</groupId>
			<artifactId>mapping-engine-all</artifactId>
			<version>${vorto.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.eclipse.vorto.middleware</groupId>
			<artifactId>middleware-ext-ditto</artifactId>
			<version>${project.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.eclipse.vorto.middleware</groupId>
			<artifactId>middleware-ext-kinesis</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>org.eclipse.vorto</groupId>
			<artifactId>model</artifactId>
			<version>${vorto.version}</version>
		</dependency>

		<dependency>
			<groupId>org.eclipse.vorto</groupId>
			<artifactId>plugin-api</artifactId>
			<version>${vorto.version}</version>
		</dependency>

		<dependency>
			<groupId>org.eclipse.vorto</groupId>
			<artifactId>repository-java-client</artifactId>
			<version>${vorto.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jms</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.jms</groupId>
			<artifactId>jms-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.qpid</groupId>
			<artifactId>qpid-jms-client</artifactId>
			<version>0.11.0</version>
		</dependency>
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>2.3.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-client</artifactId>
			<version>${amq.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-pool</artifactId>
			<version>${amq.version}</version>
		</dependency>

		<dependency>
			<groupId>com.thoughtworks.xstream</groupId>
			<artifactId>xstream</artifactId>
			<version>1.4.9</version>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
		</dependency>

	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
			</plugin>
			<plugin>
					<artifactId>maven-clean-plugin</artifactId>
					<version>2.4.1</version>
					<configuration>
						<filesets>
							<fileset>
								<directory>${project.basedir}/src/main/resources/static</directory>
							</fileset>
						</filesets>
					</configuration>
				</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!-- In order to configure Maven so that the Angular project is compiled 
					first. -->
				<plugin>
					<groupId>com.github.eirslett</groupId>
					<artifactId>frontend-maven-plugin</artifactId>
					<version>1.0</version>
					<configuration>
						<workingDirectory>${angular.project.location}</workingDirectory>
						<installDirectory>${angular.project.nodeinstallation}</installDirectory>
					</configuration>
					<executions>
						<!-- It will install nodejs and npm -->
						<execution>
							<id>install node and npm</id>
							<goals>
								<goal>install-node-and-npm</goal>
							</goals>
							<configuration>
								<nodeVersion>v10.16.3</nodeVersion>
								<npmVersion>6.9.0</npmVersion>
							</configuration>
						</execution>

						<!-- It will execute command "npm install" inside "/e2e-angular2" directory -->
						<execution>
							<id>npm install</id>
							<goals>
								<goal>npm</goal>
							</goals>
							<configuration>
								<arguments>install</arguments>
							</configuration>
						</execution>
						<!-- It will execute command "npm build" inside "/e2e-angular2" directory 
							to clean and create "/dist" directory -->
						<execution>
							<id>npm build</id>
							<goals>
								<goal>npm</goal>
							</goals>
							<configuration>
								<arguments>run build --prod --aot</arguments>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<!-- Plugin to copy the content of /angular/dist/ directory to output 
					directory (ie/ /target/transactionManager-1.0/) -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.4.2</version>
					<executions>
						<execution>
							<id>default-copy-resources</id>
							<phase>process-resources</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<overwrite>true</overwrite>
								<!-- This folder is the folder where your angular files will be copied 
									to. It must match the resulting war-file name. So if you have customized 
									the name of war-file for ex. as "app.war" then below value should be ${project.build.directory}/app/ 
									Value given below is as per default war-file name -->
								<outputDirectory>${project.basedir}/src/main/resources/static</outputDirectory>
								<outputDirectory>${project.build.outputDirectory}/static</outputDirectory>
								<resources>
									<resource>
										<directory>${project.basedir}/frontend/dist</directory>
									</resource>
								</resources>
							</configuration>
						</execution>
					</executions>
				</plugin>


				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-antrun-plugin
										</artifactId>
										<versionRange>
											[1.7,)
										</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<executions>
						<execution>
							<goals>
								<goal>repackage</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<configuration>
						<archive>
							<manifest>
								<mainClass>org.eclipse.vorto.middleware.VortoMiddleware</mainClass>
							</manifest>
						</archive>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>
