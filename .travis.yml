sudo: required
dist: trusty

language: java

services:
  - docker

jdk: oraclejdk8

cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.sonar/cache'

before_install:
  - echo "MAVEN_OPTS='-Xms1g -Xmx2g'" > ~/.mavenrc

script:
  - cd vorto-generators
  - mvn -q clean install
  - if [ -n "$TRAVIS_TAG" ]; then
    docker build --build-arg JAR_FILE=./generator-runner/target/generator-runner-3rd-party-exec.jar -f docker/Generators_Dockerfile -t eclipsevorto/vorto-generators-3rd-party:latest .;
    docker build --build-arg JAR_FILE=./generator-runner/target/generator-runner-3rd-party-exec.jar -f docker/Generators_Dockerfile -t eclipsevorto/vorto-generators-3rd-party:$TRAVIS_TAG .;
    fi;
  - mkdir aws-upload
  - export TRAVIS_COMMIT_SHORT=$(git rev-parse --short HEAD)
  - export ELASTIC_BEANSTALK_LABEL="${TRAVIS_BUILD_NUMBER}_${TRAVIS_COMMIT_SHORT}"
  - export ELASTIC_BEANSTALK_DESCRIPTION="Build ${BUILD_ID} - Git Revision ${GIT_COMMIT} - ${GIT_COMMENT}"
  - cp ./generator-runner/target/generator-runner-3rd-party-exec.jar ./aws-upload/generator-runner-3rd-party-exec_${TRAVIS_BUILD_NUMBER}_${TRAVIS_COMMIT_SHORT}.jar

deploy:
  - provider: script
    script: bash docker/docker_push
    on:
      branch:
      - master
  - provider: s3
    access_key_id: "$VORTO_AWS_ACCESS_KEY"
    secret_access_key: "$VORTO_AWS_SECRET_KEY"
    bucket: "$VORTO_S3_BUCKET"
    region: $VORTO_S3_REGION
    skip_cleanup: true
    local_dir: 'aws-upload'
    on:
      branch: "feature/integrate_s3_in_travisci"
  - provider: elasticbeanstalk
    access_key_id: "$VORTO_AWS_ACCESS_KEY"
    secret_access_key: "$VORTO_AWS_SECRET_KEY"
    bucket_name: "$VORTO_S3_BUCKET"
    region: $VORTO_S3_REGION
    app: "VortoRepoServer"
    env: "Vortoexamplegenerators-env-dev"
    bucket_path: "generator-runner-3rd-party-exec_${TRAVIS_BUILD_NUMBER}_${TRAVIS_COMMIT_SHORT}.jar"
    on:
      branch: "feature/integrate_s3_in_travisci"

