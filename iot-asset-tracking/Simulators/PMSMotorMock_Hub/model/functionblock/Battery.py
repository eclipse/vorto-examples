# // Generated by Vorto from org.eclipse.vorto.Battery

class Battery(object):
    def __init__(self):
        self.remainingCapacity = 0.0
        self.value = 0.0
        self.remainingCapacityAmpHour = 0.0

    ### Status property remainingCapacity
    @property
    def remainingCapacity(self):
        return self.__remainingCapacity[0]
    
    @remainingCapacity.setter
    def remainingCapacity(self, value):
        self.__remainingCapacity = (value, True)
    
    ### Status property value
    @property
    def value(self):
        return self.__value[0]
    
    @value.setter
    def value(self, value):
        self.__value = (value, True)
    
    ### Configuration property remainingCapacityAmpHour
    @property
    def remainingCapacityAmpHour(self):
        return self.__remainingCapacityAmpHour[0]
    
    @remainingCapacityAmpHour.setter
    def remainingCapacityAmpHour(self, value):
        self.__remainingCapacityAmpHour = (value, True)
    
    def serializeStatus(self, serializer):
        serializer.first_prop = True
        if self.__remainingCapacity[1]:
               serializer.serialize_property("remainingCapacity", self.__remainingCapacity[0])
               self.__remainingCapacity = (self.__remainingCapacity[0], False)
        if self.__value[1]:
               serializer.serialize_property("value", self.__value[0])
               self.__value = (self.__value[0], False)
    def serializeConfiguration(self, serializer):
        serializer.first_prop = True
        if self.__remainingCapacityAmpHour[1]:
               serializer.serialize_property("remainingCapacityAmpHour", self.__remainingCapacityAmpHour[0])
               self.__remainingCapacityAmpHour = (self.__remainingCapacityAmpHour[0], False)
